---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  url?: string;
  type?: string;
  structuredData?: object;
}

const { 
  title, 
  description = "Create and share curated product collections", 
  image = "/og-image.png",
  url = Astro.url.href,
  type = "website",
  structuredData
} = Astro.props;

// Default structured data for the website
const defaultStructuredData = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "TypaVibe",
  "description": "Create and share curated product collections instantly",
  "url": "https://typavibe.netlify.app",
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://typavibe.netlify.app/explore?search={search_term_string}",
    "query-input": "required name=search_term_string"
  }
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    
    <!-- SEO Meta Tags -->
    <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
    <meta name="author" content="TypaVibe" />
    <meta name="theme-color" content="#2563eb" />
    <link rel="canonical" href={url} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="TypaVibe" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    <meta property="twitter:site" content="@typavibe" />
    
    <!-- Additional SEO -->
    <meta name="keywords" content="collections, curation, products, shopping, lifestyle, fashion, tech, home, beauty, fitness, food" />
    <meta name="application-name" content="TypaVibe" />
    <meta name="apple-mobile-web-app-title" content="TypaVibe" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    
    <!-- Favicon and Icons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="dns-prefetch" href="https://fonts.googleapis.com" />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData || defaultStructuredData)} />
    
    <!-- Performance optimizations -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" as="style" />
    <link rel="preload" href="/og-image.png" as="image" />
    
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-XXXXXXXXXX', {
        page_title: '{title}',
        page_location: '{url}'
      });
    </script>
  </head>
  <body>
    <div class="container">
      <slot />
    </div>
    
    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then(registration => {
              console.log('SW registered: ', registration);
            })
            .catch(registrationError => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }
      
      // Performance monitoring
      if ('performance' in window) {
        window.addEventListener('load', () => {
          setTimeout(() => {
            const perfData = performance.getEntriesByType('navigation')[0];
            const loadTime = perfData.loadEventEnd - perfData.loadEventStart;
            console.log('Page load time:', loadTime, 'ms');
            
            // Send performance data to analytics
            if (typeof gtag !== 'undefined') {
              gtag('event', 'timing_complete', {
                name: 'load',
                value: Math.round(loadTime)
              });
            }
          }, 0);
        });
      }
      
      // Custom event tracking
      function trackEvent(eventName, parameters = {}) {
        if (typeof gtag !== 'undefined') {
          gtag('event', eventName, parameters);
        }
      }
      
      // Track collection creation
      window.trackCollectionCreated = function(collectionTitle) {
        trackEvent('collection_created', {
          collection_title: collectionTitle
        });
      };
      
      // Track collection view
      window.trackCollectionViewed = function(collectionTitle) {
        trackEvent('collection_viewed', {
          collection_title: collectionTitle
        });
      };
      
      // Track item added
      window.trackItemAdded = function(itemTitle) {
        trackEvent('item_added', {
          item_title: itemTitle
        });
      };
      
      // Track search
      window.trackSearch = function(searchTerm) {
        trackEvent('search', {
          search_term: searchTerm
        });
      };
    </script>
  </body>
</html>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

  :root {
    --color-text: #1f2937;
    --color-text-secondary: #6b7280;
    --color-border: #e5e7eb;
    --color-border-hover: #d1d5db;
    --color-background: #ffffff;
    --color-background-secondary: #f9fafb;
    --color-accent: #2563eb;
    --color-accent-hover: #1d4ed8;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --radius: 12px;
    --radius-sm: 8px;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    color: var(--color-text);
    background: var(--color-background);
    font-size: 15px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    min-height: 100vh;
  }

  .container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  /* Layout */
  main {
    flex: 1;
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
    padding: 24px 16px;
  }

  @media (min-width: 768px) {
    main {
      max-width: 768px;
      padding: 48px 24px;
    }
  }

  @media (min-width: 1024px) {
    main {
      max-width: 896px;
    }
  }

  /* Typography - Notion style */
  h1 {
    font-size: 2rem;
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 16px;
    color: var(--color-text);
  }

  h2 {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.3;
    margin-bottom: 12px;
    color: var(--color-text);
  }

  h3 {
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.4;
    margin-bottom: 8px;
    color: var(--color-text);
  }

  p {
    color: var(--color-text-secondary);
    margin-bottom: 16px;
  }

  /* Forms - Claude inspired */
  form {
    display: flex;
    flex-direction: column;
    gap: 20px;
    max-width: 480px;
    margin: 0 auto;
  }

  input, textarea {
    padding: 12px 16px;
    font-size: 16px; /* Prevents iOS zoom */
    border: 1.5px solid var(--color-border);
    border-radius: var(--radius-sm);
    background: var(--color-background);
    transition: all 0.2s ease;
    font-family: inherit;
    min-height: 44px;
    resize: vertical;
  }

  input:focus, textarea:focus {
    outline: none;
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px rgb(37 99 235 / 0.1);
  }

  input::placeholder, textarea::placeholder {
    color: var(--color-text-secondary);
  }

  textarea {
    min-height: 120px;
    line-height: 1.5;
  }

  /* Buttons - Claude style */
  button {
    padding: 12px 24px;
    font-size: 15px;
    font-weight: 500;
    border: none;
    border-radius: var(--radius-sm);
    cursor: pointer;
    transition: all 0.2s ease;
    font-family: inherit;
    min-height: 44px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    background: var(--color-accent);
    color: white;
  }

  button:hover {
    background: var(--color-accent-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-primary {
    background: var(--color-accent);
    color: white;
  }

  .btn-primary:hover {
    background: var(--color-accent-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-secondary {
    background: var(--color-background-secondary);
    color: var(--color-text);
    border: 1.5px solid var(--color-border);
  }

  .btn-secondary:hover {
    border-color: var(--color-border-hover);
    background: white;
  }

  /* Cards - Notion inspired */
  .collection-card {
    background: var(--color-background);
    border: 1.5px solid var(--color-border);
    border-radius: var(--radius);
    padding: 24px;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .collection-card:hover {
    border-color: var(--color-border-hover);
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }

  .collection-card h3 {
    margin-bottom: 8px;
  }

  .collection-card h3 a {
    text-decoration: none;
    color: var(--color-text);
    font-weight: 600;
  }

  .collection-card p {
    color: var(--color-text-secondary);
    font-size: 14px;
    margin-bottom: 12px;
    line-height: 1.5;
  }

  .collection-card small {
    color: var(--color-text-secondary);
    font-size: 13px;
    font-weight: 500;
  }

  /* Collection grid */
  .collections-grid {
    display: grid;
    gap: 20px;
    grid-template-columns: 1fr;
  }

  @media (min-width: 768px) {
    .collections-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 24px;
    }
  }

  @media (min-width: 1024px) {
    .collections-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Hero section */
  .hero {
    text-align: center;
    max-width: 600px;
    margin: 0 auto 64px;
  }

  .hero h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 16px;
    background: linear-gradient(135deg, var(--color-text) 0%, var(--color-text-secondary) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  @media (min-width: 768px) {
    .hero h1 {
      font-size: 3rem;
    }
  }

  .hero p {
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    margin-bottom: 32px;
  }

  /* Items list */
  .items {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .item {
    background: var(--color-background-secondary);
    border: 1.5px solid var(--color-border);
    border-radius: var(--radius-sm);
    padding: 20px;
    transition: all 0.2s ease;
  }

  .item:hover {
    border-color: var(--color-border-hover);
    background: white;
  }

  .item h3 a {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
  }

  .item h3 a:hover {
    text-decoration: underline;
  }

  .item .price {
    display: inline-block;
    background: var(--color-accent);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 13px;
    font-weight: 600;
    margin-top: 8px;
  }

  /* Edit sections */
  .edit-section {
    background: var(--color-background-secondary);
    border: 1.5px solid var(--color-border);
    border-radius: var(--radius);
    padding: 24px;
    margin-bottom: 24px;
  }

  .edit-section h2 {
    margin-bottom: 16px;
    color: var(--color-text);
  }

  .edit-section form {
    max-width: none;
  }

  /* Social sharing */
  .share-buttons {
    display: flex;
    gap: 12px;
    margin-top: 24px;
    justify-content: center;
    flex-wrap: wrap;
  }

  .share-btn {
    padding: 8px 16px;
    font-size: 14px;
    border-radius: var(--radius-sm);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    transition: all 0.2s ease;
    min-height: auto;
  }

  .share-btn.twitter {
    background: #1da1f2;
    color: white;
  }

  .share-btn.facebook {
    background: #1877f2;
    color: white;
  }

  .share-btn.linkedin {
    background: #0077b5;
    color: white;
  }

  .share-btn.copy {
    background: var(--color-background-secondary);
    color: var(--color-text);
    border: 1.5px solid var(--color-border);
  }

  .share-btn:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  /* Loading states */
  .loading {
    opacity: 0.6;
    pointer-events: none;
  }

  /* Responsive utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Smooth focus styles throughout */
  *:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  /* Performance optimizations */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* Print styles */
  @media print {
    .share-buttons,
    .btn-secondary {
      display: none !important;
    }
  }
</style>
